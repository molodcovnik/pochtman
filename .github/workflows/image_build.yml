name: Deploy

on:
  workflow_run:
    workflows: [ Bump version, Django Testing ]
    types:
      - completed
  push:
    branches:
      - main
      - develop

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Install Docker Compose
        run: |
          sudo apt-get update
          sudo apt-get install -y docker-compose

      - name: Log in to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and push Docker image
        run: |
          docker-compose build
          docker-compose push
        env:
          DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
          DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}

  deploy:
      runs-on: ubuntu-latest
      needs: build

      steps:
        - name: Checkout code
          uses: actions/checkout@v2

        - name: Set up SSH key
          run: |
            mkdir -p ~/.ssh
            echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa
            chmod 600 ~/.ssh/id_rsa
            ssh-keyscan -H ${{ secrets.HOST_IP }} >> ~/.ssh/known_hosts

        - name: Deploy to server
          env:
            CELERY_BROKER_URL: ${{ secrets.CELERY_BROKER_URL }}
            CELERY_RESULT_BACKEND: ${{ secrets.CELERY_RESULT_BACKEND }}
            EMAIL_HOST: ${{ secrets.EMAIL_HOST }}
            EMAIL_PORT: ${{ secrets.EMAIL_PORT }}
            EMAIL_HOST_USER: ${{ secrets.EMAIL_HOST_USER }}
            EMAIL_HOST_PASSWORD: ${{ secrets.EMAIL_HOST_PASSWORD }}
            EMAIL_BACKEND: ${{ secrets.EMAIL_BACKEND }}
            DEFAULT_FROM_EMAIL: ${{ secrets.DEFAULT_FROM_EMAIL }}
            FERNET_KEY: ${{ secrets.FERNET_KEY }}
          run: |
            ssh -o StrictHostKeyChecking=no ${{ secrets.HOST_USER }}@${{ secrets.HOST_IP }} "cd pochtman/ && docker pull ${{ secrets.DOCKER_USERNAME}}/${{ secrets.DOCKER_REPO}}:latest && docker-compose up -d"